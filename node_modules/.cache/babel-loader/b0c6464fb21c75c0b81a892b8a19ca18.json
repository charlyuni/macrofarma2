{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cacti\\\\Desktop\\\\app_ci\\\\primera_app\\\\src\\\\store\\\\CartContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\nconst useCartContext = () => {\n  _s();\n\n  return useContext(CartContext);\n};\n\n_s(useCartContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst {\n  Provider\n} = CartContext;\nexport function CartContextProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n\n  const addtoCart = (item, cant) => {\n    if (isInCart(item.id)) {\n      cart.map(cartItem => {\n        if (cartItem.id === item.id) {\n          return cartItem.count += cant;\n        } else {\n          return cartItem;\n        }\n      });\n    } else {\n      const newItems = { ...item,\n        cant\n      };\n      setCart([...cart, newItems]);\n    }\n  };\n\n  const removeFromCart = id => {\n    const newCart = [...cart];\n    const cartFilter = newCart.filter(item => {\n      return item.id !== id;\n    });\n    setCart(cartFilter);\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  const isInCart = id => {\n    return true;\n  };\n\n  const contextFunction = () => console.log('context listo');\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: {\n      contextFunction,\n      cart,\n      addtoCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CartContextProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n\n_c = CartContextProvider;\nexport default useCartContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["C:/Users/Cacti/Desktop/app_ci/primera_app/src/store/CartContext.js"],"names":["createContext","useContext","useState","CartContext","useCartContext","Provider","CartContextProvider","children","cart","setCart","addtoCart","item","cant","isInCart","id","map","cartItem","count","newItems","removeFromCart","newCart","cartFilter","filter","clearCart","contextFunction","console","log"],"mappings":";;;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,QAAnC,QAAkD,OAAlD;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AACA,MAAMI,cAAc,GAAG;AAAA;;AAAA,SAAMH,UAAU,CAACE,WAAD,CAAhB;AAAA,CAAvB;;GAAMC,c;;AACN,MAAM;AAACC,EAAAA;AAAD,IAAaF,WAAnB;AAIA,OAAO,SAASG,mBAAT,OAAyC;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMQ,SAAS,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC9B,QAAIC,QAAQ,CAACF,IAAI,CAACG,EAAN,CAAZ,EAAsB;AAClBN,MAAAA,IAAI,CAACO,GAAL,CAASC,QAAQ,IAAI;AACjB,YAAIA,QAAQ,CAACF,EAAT,KAAgBH,IAAI,CAACG,EAAzB,EAA4B;AACxB,iBAAOE,QAAQ,CAACC,KAAT,IAAkBL,IAAzB;AACH,SAFD,MAEK;AACD,iBAAOI,QAAP;AACH;AACJ,OAND;AAQH,KATD,MASK;AACL,YAAME,QAAQ,GAAG,EAAC,GAAGP,IAAJ;AAASC,QAAAA;AAAT,OAAjB;AACAH,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUU,QAAV,CAAD,CAAP;AACC;AACJ,GAdD;;AAgBA,QAAMC,cAAc,GAAIL,EAAD,IAAQ;AAC3B,UAAMM,OAAO,GAAG,CAAC,GAAGZ,IAAJ,CAAhB;AACA,UAAMa,UAAU,GAAGD,OAAO,CAACE,MAAR,CAAeX,IAAI,IAAI;AACtC,aAAOA,IAAI,CAACG,EAAL,KAAYA,EAAnB;AAEH,KAHkB,CAAnB;AAIAL,IAAAA,OAAO,CAACY,UAAD,CAAP;AACH,GAPD;;AASA,QAAME,SAAS,GAAG,MAAM;AACpBd,IAAAA,OAAO,CAAC,EAAD,CAAP;AACF,GAFF;;AAKA,QAAMI,QAAQ,GAAIC,EAAD,IAAQ;AACrB,WAAO,IAAP;AACH,GAFD;;AAIA,QAAMU,eAAe,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA9B;;AACA,sBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAACF,MAAAA,eAAD;AAAkBhB,MAAAA,IAAlB;AAAwBE,MAAAA;AAAxB,KAAjB;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;IA3CeD,mB;;KAAAA,mB;AA6ChB,eAAeF,cAAf","sourcesContent":["import {createContext, useContext, useState} from 'react';\r\n\r\nconst CartContext = createContext();\r\nconst useCartContext = () => useContext(CartContext); \r\nconst {Provider} = CartContext;\r\n\r\n    \r\n\r\nexport function CartContextProvider({children}) {\r\n    const [cart, setCart] = useState([]); \r\n    const addtoCart = (item, cant) => {\r\n        if (isInCart(item.id)){       \r\n            cart.map(cartItem => {\r\n                if (cartItem.id === item.id){\r\n                    return cartItem.count += cant\r\n                }else{\r\n                    return cartItem\r\n                }\r\n            })\r\n\r\n        }else{\r\n        const newItems = {...item,cant}\r\n        setCart([...cart, newItems]);\r\n        }\r\n    }\r\n\r\n    const removeFromCart = (id) => {\r\n        const newCart = [...cart]\r\n        const cartFilter = newCart.filter(item => {\r\n            return item.id !== id\r\n        \r\n        });\r\n        setCart(cartFilter);\r\n    }\r\n\r\n    const clearCart = () => {\r\n        setCart([]);\r\n     }\r\n    \r\n\r\n    const isInCart = (id) => { \r\n        return true\r\n    }\r\n\r\n    const contextFunction = () => console.log('context listo');\r\n    return(\r\n        <Provider value={{contextFunction, cart, addtoCart}}>\r\n            {children}\r\n        </Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default useCartContext;"]},"metadata":{},"sourceType":"module"}