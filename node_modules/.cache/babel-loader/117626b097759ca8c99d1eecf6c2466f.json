{"ast":null,"code":"const fs = require('fs');\n\nconst nurl = require('url');\n\nconst path = require('path');\n\nconst stream = require('stream');\n\nconst request = require('request');\n\nconst ANSWER_METHODS = {\n  addArticle: 'article',\n  addPhoto: 'photo',\n  addVideo: 'video',\n  addGif: 'gif',\n  addVideoGif: 'mpeg4_gif',\n  addSticker: 'sticker',\n  addVoice: 'voice',\n  addDocument: 'document',\n  addLocation: 'location',\n  addVenue: 'venue',\n  addGame: 'game',\n  cachedPhoto: 'photo',\n  cachedGif: 'gif',\n  cachedVideoGif: 'mpeg4_gif',\n  cachedSticker: 'sticker',\n  cachedDocument: 'document',\n  cachedVideo: 'video',\n  cachedVoice: 'voice',\n  cachedAudio: 'audio'\n};\nconst DEFAULT_FILE_EXTENSIONS = {\n  photo: 'jpg',\n  audio: 'mp3',\n  document: 'doc',\n  sticker: 'webp',\n  voice: 'm4a',\n  video: 'mp4'\n};\nconst REGEXP_URL = /^https?:\\/\\/|www\\./; // Methods\n\nconst methods = {\n  keyboard(keyboard) {\n    let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const markup = keyboard !== undefined ? {\n      keyboard\n    } : {};\n    if (opt.resize === true) markup['resize_keyboard'] = true;\n    if (opt.once === true) markup['one_time_keyboard'] = true;\n    if (opt.remove === true) markup['remove_keyboard'] = true;\n    if (opt.selective) markup['selective'] = opt.selective;\n    return markup;\n  },\n\n  button(type, text) {\n    if (!text && type) return {\n      text: type\n    };\n    type = `request_${type}`;\n    return {\n      text,\n      [type]: true\n    };\n  },\n\n  inlineKeyboard(inline_keyboard) {\n    return {\n      inline_keyboard\n    };\n  },\n\n  inlineQueryKeyboard(inline_keyboard) {\n    return {\n      inline_keyboard: inline_keyboard\n    };\n  },\n\n  inlineButton(text) {\n    let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const markup = {\n      text\n    };\n    if (opt.url) markup.url = opt.url;\n    if (opt.inline !== undefined) markup.switch_inline_query = opt.inline;\n    if (opt.inlineCurrent !== undefined) markup.switch_inline_query_current_chat = opt.inlineCurrent;\n    if (opt.callback) markup.callback_data = String(opt.callback);\n    if (opt.game) markup.callback_game = String(opt.game);\n    if (opt.pay === true) markup.pay = opt.pay;\n    return markup;\n  },\n\n  answerList(id, opt) {\n    return new AnswerList(id, opt);\n  },\n\n  getMe: {},\n  sendMessage: {\n    arguments: ['chat_id', 'text']\n  },\n  forwardMessage: {\n    arguments: ['chat_id', 'from_chat_id', 'message_id']\n  },\n\n  sendPhoto(chat_id, photo, opt) {\n    return sendFile.call(this, 'photo', photo, opt, {\n      chat_id\n    });\n  },\n\n  sendAudio(chat_id, audio) {\n    let opt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const form = {\n      chat_id\n    };\n    if (opt.title) form.title = opt.title;\n    if (opt.performer) form.performer = opt.performer;\n    if (Number.isInteger(opt.duration)) form.duration = opt.duration;\n    return sendFile.call(this, 'audio', audio, opt, form);\n  },\n\n  sendDocument(chat_id, doc, opt) {\n    return sendFile.call(this, 'document', doc, opt, {\n      chat_id\n    });\n  },\n\n  sendAnimation(chat_id, animation, opt) {\n    return sendFile.call(this, 'animation', animation, opt, {\n      chat_id\n    });\n  },\n\n  sendSticker(chat_id, sticker, opt) {\n    return sendFile.call(this, 'sticker', sticker, opt, {\n      chat_id\n    });\n  },\n\n  sendVideo(chat_id, video) {\n    let opt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const form = {\n      chat_id\n    };\n    if (Number.isInteger(opt.duration)) form.duration = opt.duration;\n    if (Number.isInteger(opt.width)) form.width = opt.width;\n    if (Number.isInteger(opt.height)) form.height = opt.height;\n\n    if (opt.supportsStreaming) {\n      form.supports_streaming = true;\n    }\n\n    return sendFile.call(this, 'video', video, opt, form);\n  },\n\n  sendVideoNote: {\n    arguments: ['chat_id', 'video_note'],\n\n    options(form) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (Number.isInteger(opt.duration)) form.duration = opt.duration;\n      if (Number.isInteger(opt.length)) form.length = opt.length;\n      return form;\n    }\n\n  },\n\n  sendVoice(chat_id, voice) {\n    let opt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const form = {\n      chat_id\n    };\n    if (Number.isInteger(opt.duration)) form.duration = opt.duration;\n    return sendFile.call(this, 'voice', voice, opt, form);\n  },\n\n  sendLocation: {\n    arguments(chat_id, position) {\n      return {\n        chat_id,\n        latitude: position[0],\n        longitude: position[1]\n      };\n    },\n\n    options(form) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (Number.isInteger(opt.livePeriod)) form.live_period = opt.livePeriod;\n      return form;\n    }\n\n  },\n  editMessageLiveLocation: {\n    arguments() {\n      let opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const form = {};\n      if (opt.latitude) form.latitude = opt.latitude;\n      if (opt.longitude) form.longitude = opt.longitude;\n      if (opt.chatId) form.chat_id = opt.chatId;\n      if (opt.messageId) form.message_id = opt.messageId;\n      if (opt.inlineMessageId) form.inline_message_id = opt.inlineMessageId;\n      return form;\n    }\n\n  },\n  stopMessageLiveLocation: {\n    arguments() {\n      let opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const form = {};\n      if (opt.chatId) form.chat_id = opt.chatId;\n      if (opt.messageId) form.message_id = opt.messageId;\n      if (opt.inlineMessageId) form.inline_message_id = opt.inlineMessageId;\n      return form;\n    }\n\n  },\n  editMessageMedia: {\n    arguments(media) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const form = {};\n      if (opt.chatId) form.chat_id = opt.chatId;\n      if (opt.messageId) form.message_id = opt.messageId;\n      if (opt.inlineMessageId) form.inline_message_id = opt.inlineMessageId;\n      form.media = JSON.stringify(media);\n      return form;\n    }\n\n  },\n  sendVenue: {\n    arguments(chat_id, position, title, address) {\n      return {\n        chat_id,\n        latitude: position[0],\n        longitude: position[1],\n        title,\n        address\n      };\n    },\n\n    options(form) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (opt.foursquareId) form.foursquare_id = opt.foursquareId;\n      if (opt.foursquareType) form.foursquare_type = opt.foursquareType;\n      return form;\n    }\n\n  },\n  sendContact: {\n    arguments: ['chat_id', 'phone_number', 'first_name', 'last_name']\n  },\n  sendChatAction: {\n    short: 'sendAction',\n    arguments: ['chat_id', 'action']\n  },\n  getUserProfilePhotos: {\n    short: 'getUserPhoto',\n    arguments: 'user_id',\n\n    options(form) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (opt.offset) form.offset = opt.offset;\n      if (opt.limit) form.limit = opt.limit;\n      return form;\n    }\n\n  },\n\n  getFile(file_id) {\n    return this.request(`/getFile`, {\n      file_id\n    }).then(file => {\n      const result = file.result;\n      result.fileLink = this.fileLink + result.file_path;\n      return result;\n    });\n  },\n\n  sendGame: {\n    arguments: ['chat_id', 'game_short_name']\n  },\n  setGameScore: {\n    arguments: ['user_id', 'score'],\n\n    options(form) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (opt.force) form.force = opt.force;\n      if (opt.chatId) form.chat_id = opt.chatId;\n      if (opt.messageId) form.message_id = opt.messageId;\n      if (opt.inlineMessageId) form.inline_message_id = opt.inlineMessageId;\n      if (opt.disableEditMessage) form.disable_edit_message = opt.disableEditMessage;\n      return form;\n    }\n\n  },\n  getGameHighScores: {\n    arguments: ['user_id'],\n\n    options(form) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (opt.chatId) form.chat_id = opt.chatId;\n      if (opt.messageId) form.message_id = opt.messageId;\n      if (opt.inlineMessageId) form.inline_message_id = opt.inlineMessageId;\n      return form;\n    }\n\n  },\n  sendInvoice: {\n    arguments: ['chat_id'],\n\n    options(form) {\n      let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const photo = opt.photo || {};\n      const need = opt.need || {};\n      form.title = opt.title;\n      form.description = opt.description;\n      form.payload = opt.payload;\n      form.provider_token = opt.providerToken;\n      form.start_parameter = opt.startParameter;\n      form.currency = opt.currency;\n      form.send_phone_number_to_provider = opt.sendPhoneNumberToProvider;\n      form.send_email_to_provider = opt.sendEmailToProvider;\n      form.prices = JSON.stringify(opt.prices);\n      form.provider_data = JSON.stringify(opt.providerData);\n      if (photo.url) form.photo_url = photo.url;\n      if (Number.isInteger(photo.size)) form.photo_size = photo.size;\n      if (Number.isInteger(photo.width)) form.photo_width = photo.width;\n      if (Number.isInteger(photo.height)) form.photo_height = photo.height;\n      if (need.name === true) form.need_name = need.name;\n      if (need.phoneNumber === true) form.need_phone_number = need.phoneNumber;\n      if (need.email === true) form.need_email = need.email;\n      if (need.shippingAddress === true) form.need_shipping_address = need.shippingAddress;\n      if (opt.isFlexible === true) form.is_flexible = opt.isFlexible;\n      return form;\n    }\n\n  },\n  sendMediaGroup: {\n    arguments(chat_id, mediaList) {\n      return {\n        chat_id,\n        media: JSON.stringify(mediaList)\n      };\n    }\n\n  },\n  getStickerSet: {\n    arguments: ['name']\n  },\n\n  uploadStickerFile(user_id, sticker, opt) {\n    return sendFile.call(this, 'png_sticker', sticker, opt, {\n      user_id\n    }, 'uploadStickerFile');\n  },\n\n  createNewStickerSet(user_id, name, title, sticker, emojis) {\n    let opt = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    const form = {\n      user_id,\n      name,\n      title,\n      emojis\n    };\n    if (opt.containsMasks) form.contains_masks = opt.containsMasks;\n    if (opt.maskPosition) form.mask_position = opt.maskPosition;\n    return sendFile.call(this, 'png_sticker', sticker, opt, form, 'createNewStickerSet');\n  },\n\n  setChatStickerSet: {\n    arguments: ['chat_id', 'sticker_set_name']\n  },\n  deleteChatStickerSet: {\n    arguments: ['chat_id']\n  },\n\n  addStickerToSet(user_id, name, sticker, emojis) {\n    let opt = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    const form = {\n      user_id,\n      name,\n      emojis\n    };\n    if (opt.maskPosition) form.mask_position = opt.maskPosition;\n    return sendFile.call(this, 'png_sticker', sticker, opt, form, 'addStickerToSet');\n  },\n\n  setStickerPositionInSet: {\n    arguments: ['sticker', 'position']\n  },\n  deleteStickerFromSet: {\n    arguments: ['sticker']\n  },\n  getChat: {\n    arguments: ['chat_id']\n  },\n  leaveChat: {\n    arguments: ['chat_id']\n  },\n  getChatAdministrators: {\n    short: 'getAdmins',\n    arguments: ['chat_id']\n  },\n  getChatMember: {\n    short: 'getMember',\n    arguments: ['chat_id', 'user_id']\n  },\n  getChatMembersCount: {\n    short: 'countMembers',\n    arguments: ['chat_id']\n  },\n  kickChatMember: {\n    short: 'kick',\n    arguments: ['chat_id', 'user_id'],\n\n    options(form, opt) {\n      if (opt.untilDate) form.until_date = opt.untilDate;\n      return form;\n    }\n\n  },\n  unbanChatMember: {\n    short: 'unban',\n    arguments: ['chat_id', 'user_id']\n  },\n  restrictChatMember: {\n    arguments: ['chat_id', 'user_id'],\n\n    options(form, opt) {\n      if (opt.untilDate) form.until_date = opt.untilDate;\n      if (opt.canSendMessages) form.can_send_messages = opt.canSendMessages;\n      if (opt.canSendMediaMessages) form.can_send_media_messages = opt.canSendMediaMessages;\n      if (opt.canSendOtherMessages) form.can_send_other_messages = opt.canSendOtherMessages;\n      if (opt.canAddWebPagePreviews) form.can_add_web_page_previews = opt.canAddWebPagePreviews;\n      return form;\n    }\n\n  },\n  promoteChatMember: {\n    arguments: ['chat_id', 'user_id'],\n\n    options(form, opt) {\n      if (opt.canChangeInfo) form.can_change_info = opt.canChangeInfo;\n      if (opt.canPostMessages) form.can_post_messages = opt.canPostMessages;\n      if (opt.canEditMessages) form.can_edit_messages = opt.canEditMessages;\n      if (opt.canDeleteMessages) form.can_delete_messages = opt.canDeleteMessages;\n      if (opt.canInviteUsers) form.can_invite_users = opt.canInviteUsers;\n      if (opt.canRestrictMembers) form.can_restrict_members = opt.canRestrictMembers;\n      if (opt.canPinMessages) form.can_pin_messages = opt.canPinMessages;\n      if (opt.canPromoteMembers) form.can_promote_members = opt.canPromoteMembers;\n      return form;\n    }\n\n  },\n  exportChatInviteLink: {\n    arguments: ['chat_id']\n  },\n\n  setChatPhoto(chat_id, photo, opt) {\n    return sendFile.call(this, 'photo', photo, opt, {\n      chat_id\n    }, 'setChatPhoto');\n  },\n\n  deleteChatPhoto: {\n    arguments: ['chat_id']\n  },\n  setChatTitle: {\n    arguments: ['chat_id', 'title']\n  },\n  setChatDescription: {\n    arguments: ['chat_id', 'description']\n  },\n  pinChatMessage: {\n    arguments: ['chat_id', 'message_id']\n  },\n  unpinChatMessage: {\n    arguments: ['chat_id']\n  },\n  answerInlineQuery: {\n    short: 'answerQuery',\n\n    arguments(answers) {\n      const data = {\n        inline_query_id: answers.id,\n        results: answers.results(),\n        next_offset: answers.nextOffset,\n        is_personal: answers.personal,\n        cache_time: answers.cacheTime\n      };\n      if (answers.pmText !== undefined) data.switch_pm_text = answers.pmText;\n      if (answers.pmParameter !== undefined) data.switch_pm_parameter = answers.pmParameter;\n      return data;\n    }\n\n  },\n  answerCallbackQuery: {\n    short: 'answerCallback',\n    arguments: ['callback_query_id'],\n\n    options(form, opt) {\n      if (opt.text) form.text = opt.text;\n      if (opt.url) form.url = opt.url;\n      if (opt.showAlert) form.show_alert = opt.showAlert;\n      if (opt.cacheTime) form.cache_time = opt.cacheTime;\n      return form;\n    }\n\n  },\n  answerShippingQuery: {\n    arguments: ['shipping_query_id', 'ok'],\n\n    options(form, opt) {\n      if (opt.shippingOptions) form.shipping_options = opt.shippingOptions;\n      if (opt.errorMessage) form.error_message = opt.errorMessage;\n      return form;\n    }\n\n  },\n  answerPreCheckoutQuery: {\n    arguments: ['pre_checkout_query_id', 'ok'],\n\n    options(form, opt) {\n      if (opt.errorMessage) form.error_message = opt.errorMessage;\n      return form;\n    }\n\n  },\n  deleteMessage: {\n    arguments: ['chat_id', 'message_id']\n  },\n  editMessageText: {\n    short: 'editText',\n    arguments: (obj, text) => editObject(obj, {\n      text\n    })\n  },\n  editMessageCaption: {\n    short: 'editCaption',\n    arguments: (obj, caption) => editObject(obj, {\n      caption\n    })\n  },\n  editMessageReplyMarkup: {\n    short: 'editMarkup',\n    arguments: (obj, reply_markup) => editObject(obj, {\n      reply_markup\n    })\n  },\n\n  setWebhook(url, certificate, allowedUpdates, maxConnections) {\n    const form = {\n      url\n    };\n\n    if (Array.isArray(allowedUpdates)) {\n      form.allowed_updates = allowedUpdates;\n    }\n\n    if (Number.isInteger(maxConnections)) {\n      form.max_connections = maxConnections;\n    }\n\n    if (certificate) {\n      form.certificate = {\n        value: fs.readFileSync(certificate),\n        options: {\n          filename: 'cert.pem'\n        }\n      };\n      return this.request('/setWebhook', null, form);\n    }\n\n    return this.request('/setWebhook', form);\n  },\n\n  getWebhookInfo: {},\n  deleteWebhook: {},\n  sendDice: {\n    arguments: ['chat_id', 'emoji']\n  }\n}; // Functions\n\nfunction editObject(obj, form) {\n  if (obj.chatId && obj.messageId) {\n    form.chat_id = obj.chatId;\n    form.message_id = obj.messageId;\n  } else if (obj.inlineMsgId) {\n    form.inline_message_id = obj.inlineMsgId;\n  }\n\n  return form;\n}\n\nfunction sendFile(type, file) {\n  let opt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let methodForm = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let methodUrl = arguments.length > 4 ? arguments[4] : undefined;\n  const form = this.properties(methodForm, opt);\n  const defaultName = `file.${DEFAULT_FILE_EXTENSIONS[type]}`;\n  const url = methodUrl ? methodUrl : 'send' + type.charAt(0).toUpperCase() + type.slice(1); // Send bot action event\n\n  this.event(url, [].slice.call(arguments).splice(0, 1)); // Set file caption\n\n  if (opt.caption) form.caption = opt.caption;\n\n  if (file instanceof stream.Stream) {\n    // File stream object\n    if (!opt.fileName) {\n      opt.fileName = nurl.parse(path.basename(file.path)).pathname;\n    }\n\n    form[type] = {\n      value: file,\n      options: {\n        filename: opt.fileName\n      }\n    };\n  } else if (Buffer.isBuffer(file)) {\n    // File buffer\n    if (!opt.fileName) opt.fileName = defaultName;\n    form[type] = {\n      value: file,\n      options: {\n        filename: opt.fileName\n      }\n    };\n  } else if (REGEXP_URL.test(file)) {\n    // File url\n    if (!opt.fileName) {\n      opt.fileName = path.basename(nurl.parse(file).pathname) || defaultName;\n    }\n\n    if (opt.serverDownload === true) {\n      // Download by our server\n      form[type] = {\n        value: request.get(file),\n        options: {\n          filename: opt.fileName\n        }\n      };\n    } else {\n      // Download by Telegram server\n      form[type] = file;\n    }\n  } else if (fs.existsSync(file)) {\n    // File location\n    if (!opt.fileName) opt.fileName = path.basename(file);\n    form[type] = {\n      value: fs.createReadStream(file),\n      options: {\n        filename: opt.fileName\n      }\n    };\n  } else {\n    // File as 'file_id'\n    form[type] = file;\n  }\n\n  return this.request(`/${url}`, null, form).then(response => response.result);\n}\n/* Answer List */\n\n\nclass AnswerList {\n  constructor(id) {\n    let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.id = id;\n    this.cacheTime = Number(opt.cacheTime) || 300;\n    this.nextOffset = opt.nextOffset === undefined ? null : opt.nextOffset;\n    this.personal = opt.personal === undefined ? false : opt.personal;\n    this.pmText = opt.pmText;\n    this.pmParameter = opt.pmParameter;\n    this.list = [];\n  }\n\n  add(type) {\n    let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    set.type = type;\n    this.list.push(set);\n    return set;\n  }\n\n  results() {\n    return JSON.stringify(this.list);\n  }\n\n} // Add answer methods\n\n\n{\n  for (let prop in ANSWER_METHODS) {\n    AnswerList.prototype[prop] = (name => {\n      return function (set) {\n        return this.add(name, set);\n      };\n    })(ANSWER_METHODS[prop]);\n  }\n} // Export methods\n\nmodule.exports = methods;","map":{"version":3,"sources":["C:/Users/Cacti/node_modules/telebot/lib/methods.js"],"names":["fs","require","nurl","path","stream","request","ANSWER_METHODS","addArticle","addPhoto","addVideo","addGif","addVideoGif","addSticker","addVoice","addDocument","addLocation","addVenue","addGame","cachedPhoto","cachedGif","cachedVideoGif","cachedSticker","cachedDocument","cachedVideo","cachedVoice","cachedAudio","DEFAULT_FILE_EXTENSIONS","photo","audio","document","sticker","voice","video","REGEXP_URL","methods","keyboard","opt","markup","undefined","resize","once","remove","selective","button","type","text","inlineKeyboard","inline_keyboard","inlineQueryKeyboard","inlineButton","url","inline","switch_inline_query","inlineCurrent","switch_inline_query_current_chat","callback","callback_data","String","game","callback_game","pay","answerList","id","AnswerList","getMe","sendMessage","arguments","forwardMessage","sendPhoto","chat_id","sendFile","call","sendAudio","form","title","performer","Number","isInteger","duration","sendDocument","doc","sendAnimation","animation","sendSticker","sendVideo","width","height","supportsStreaming","supports_streaming","sendVideoNote","options","length","sendVoice","sendLocation","position","latitude","longitude","livePeriod","live_period","editMessageLiveLocation","chatId","messageId","message_id","inlineMessageId","inline_message_id","stopMessageLiveLocation","editMessageMedia","media","JSON","stringify","sendVenue","address","foursquareId","foursquare_id","foursquareType","foursquare_type","sendContact","sendChatAction","short","getUserProfilePhotos","offset","limit","getFile","file_id","then","file","result","fileLink","file_path","sendGame","setGameScore","force","disableEditMessage","disable_edit_message","getGameHighScores","sendInvoice","need","description","payload","provider_token","providerToken","start_parameter","startParameter","currency","send_phone_number_to_provider","sendPhoneNumberToProvider","send_email_to_provider","sendEmailToProvider","prices","provider_data","providerData","photo_url","size","photo_size","photo_width","photo_height","name","need_name","phoneNumber","need_phone_number","email","need_email","shippingAddress","need_shipping_address","isFlexible","is_flexible","sendMediaGroup","mediaList","getStickerSet","uploadStickerFile","user_id","createNewStickerSet","emojis","containsMasks","contains_masks","maskPosition","mask_position","setChatStickerSet","deleteChatStickerSet","addStickerToSet","setStickerPositionInSet","deleteStickerFromSet","getChat","leaveChat","getChatAdministrators","getChatMember","getChatMembersCount","kickChatMember","untilDate","until_date","unbanChatMember","restrictChatMember","canSendMessages","can_send_messages","canSendMediaMessages","can_send_media_messages","canSendOtherMessages","can_send_other_messages","canAddWebPagePreviews","can_add_web_page_previews","promoteChatMember","canChangeInfo","can_change_info","canPostMessages","can_post_messages","canEditMessages","can_edit_messages","canDeleteMessages","can_delete_messages","canInviteUsers","can_invite_users","canRestrictMembers","can_restrict_members","canPinMessages","can_pin_messages","canPromoteMembers","can_promote_members","exportChatInviteLink","setChatPhoto","deleteChatPhoto","setChatTitle","setChatDescription","pinChatMessage","unpinChatMessage","answerInlineQuery","answers","data","inline_query_id","results","next_offset","nextOffset","is_personal","personal","cache_time","cacheTime","pmText","switch_pm_text","pmParameter","switch_pm_parameter","answerCallbackQuery","showAlert","show_alert","answerShippingQuery","shippingOptions","shipping_options","errorMessage","error_message","answerPreCheckoutQuery","deleteMessage","editMessageText","obj","editObject","editMessageCaption","caption","editMessageReplyMarkup","reply_markup","setWebhook","certificate","allowedUpdates","maxConnections","Array","isArray","allowed_updates","max_connections","value","readFileSync","filename","getWebhookInfo","deleteWebhook","sendDice","inlineMsgId","methodForm","methodUrl","properties","defaultName","charAt","toUpperCase","slice","event","splice","Stream","fileName","parse","basename","pathname","Buffer","isBuffer","test","serverDownload","get","existsSync","createReadStream","response","constructor","list","add","set","push","prop","prototype","module","exports"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,KAAD,CAApB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMK,cAAc,GAAG;AACnBC,EAAAA,UAAU,EAAE,SADO;AACIC,EAAAA,QAAQ,EAAE,OADd;AACuBC,EAAAA,QAAQ,EAAE,OADjC;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAEJC,EAAAA,WAAW,EAAE,WAFT;AAEsBC,EAAAA,UAAU,EAAE,SAFlC;AAGnBC,EAAAA,QAAQ,EAAE,OAHS;AAGAC,EAAAA,WAAW,EAAE,UAHb;AAGyBC,EAAAA,WAAW,EAAE,UAHtC;AAInBC,EAAAA,QAAQ,EAAE,OAJS;AAIAC,EAAAA,OAAO,EAAE,MAJT;AAKnBC,EAAAA,WAAW,EAAE,OALM;AAKGC,EAAAA,SAAS,EAAE,KALd;AAKqBC,EAAAA,cAAc,EAAE,WALrC;AAMnBC,EAAAA,aAAa,EAAE,SANI;AAMOC,EAAAA,cAAc,EAAE,UANvB;AAMmCC,EAAAA,WAAW,EAAE,OANhD;AAOnBC,EAAAA,WAAW,EAAE,OAPM;AAOGC,EAAAA,WAAW,EAAE;AAPhB,CAAvB;AAUA,MAAMC,uBAAuB,GAAG;AAC5BC,EAAAA,KAAK,EAAE,KADqB;AACdC,EAAAA,KAAK,EAAE,KADO;AACAC,EAAAA,QAAQ,EAAE,KADV;AAE5BC,EAAAA,OAAO,EAAE,MAFmB;AAEXC,EAAAA,KAAK,EAAE,KAFI;AAEGC,EAAAA,KAAK,EAAE;AAFV,CAAhC;AAKA,MAAMC,UAAU,GAAG,oBAAnB,C,CAEA;;AACA,MAAMC,OAAO,GAAG;AAEZC,EAAAA,QAAQ,CAACA,QAAD,EAAqB;AAAA,QAAVC,GAAU,uEAAJ,EAAI;AACzB,UAAMC,MAAM,GAAGF,QAAQ,KAAKG,SAAb,GAAyB;AAACH,MAAAA;AAAD,KAAzB,GAAsC,EAArD;AACA,QAAIC,GAAG,CAACG,MAAJ,KAAe,IAAnB,EAAyBF,MAAM,CAAC,iBAAD,CAAN,GAA4B,IAA5B;AACzB,QAAID,GAAG,CAACI,IAAJ,KAAa,IAAjB,EAAuBH,MAAM,CAAC,mBAAD,CAAN,GAA8B,IAA9B;AACvB,QAAID,GAAG,CAACK,MAAJ,KAAe,IAAnB,EAAyBJ,MAAM,CAAC,iBAAD,CAAN,GAA4B,IAA5B;AACzB,QAAID,GAAG,CAACM,SAAR,EAAmBL,MAAM,CAAC,WAAD,CAAN,GAAsBD,GAAG,CAACM,SAA1B;AACnB,WAAOL,MAAP;AACH,GATW;;AAWZM,EAAAA,MAAM,CAACC,IAAD,EAAOC,IAAP,EAAa;AACf,QAAI,CAACA,IAAD,IAASD,IAAb,EAAmB,OAAO;AAACC,MAAAA,IAAI,EAAED;AAAP,KAAP;AACnBA,IAAAA,IAAI,GAAI,WAAUA,IAAK,EAAvB;AACA,WAAO;AAACC,MAAAA,IAAD;AAAO,OAACD,IAAD,GAAQ;AAAf,KAAP;AACH,GAfW;;AAiBZE,EAAAA,cAAc,CAACC,eAAD,EAAkB;AAC5B,WAAO;AAACA,MAAAA;AAAD,KAAP;AACH,GAnBW;;AAqBZC,EAAAA,mBAAmB,CAACD,eAAD,EAAkB;AACjC,WAAO;AAACA,MAAAA,eAAe,EAAEA;AAAlB,KAAP;AACH,GAvBW;;AAyBZE,EAAAA,YAAY,CAACJ,IAAD,EAAiB;AAAA,QAAVT,GAAU,uEAAJ,EAAI;AACzB,UAAMC,MAAM,GAAG;AAACQ,MAAAA;AAAD,KAAf;AACA,QAAIT,GAAG,CAACc,GAAR,EAAab,MAAM,CAACa,GAAP,GAAad,GAAG,CAACc,GAAjB;AACb,QAAId,GAAG,CAACe,MAAJ,KAAeb,SAAnB,EAA8BD,MAAM,CAACe,mBAAP,GAA6BhB,GAAG,CAACe,MAAjC;AAC9B,QAAIf,GAAG,CAACiB,aAAJ,KAAsBf,SAA1B,EAAqCD,MAAM,CAACiB,gCAAP,GAA0ClB,GAAG,CAACiB,aAA9C;AACrC,QAAIjB,GAAG,CAACmB,QAAR,EAAkBlB,MAAM,CAACmB,aAAP,GAAuBC,MAAM,CAACrB,GAAG,CAACmB,QAAL,CAA7B;AAClB,QAAInB,GAAG,CAACsB,IAAR,EAAcrB,MAAM,CAACsB,aAAP,GAAuBF,MAAM,CAACrB,GAAG,CAACsB,IAAL,CAA7B;AACd,QAAItB,GAAG,CAACwB,GAAJ,KAAY,IAAhB,EAAsBvB,MAAM,CAACuB,GAAP,GAAaxB,GAAG,CAACwB,GAAjB;AACtB,WAAOvB,MAAP;AACH,GAlCW;;AAoCZwB,EAAAA,UAAU,CAACC,EAAD,EAAK1B,GAAL,EAAU;AAChB,WAAO,IAAI2B,UAAJ,CAAeD,EAAf,EAAmB1B,GAAnB,CAAP;AACH,GAtCW;;AAwCZ4B,EAAAA,KAAK,EAAE,EAxCK;AA0CZC,EAAAA,WAAW,EAAE;AACTC,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,MAAZ;AADF,GA1CD;AA8CZC,EAAAA,cAAc,EAAE;AACZD,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,cAAZ,EAA4B,YAA5B;AADC,GA9CJ;;AAkDZE,EAAAA,SAAS,CAACC,OAAD,EAAU1C,KAAV,EAAiBS,GAAjB,EAAsB;AAC3B,WAAOkC,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,OAApB,EAA6B5C,KAA7B,EAAoCS,GAApC,EAAyC;AAACiC,MAAAA;AAAD,KAAzC,CAAP;AACH,GApDW;;AAsDZG,EAAAA,SAAS,CAACH,OAAD,EAAUzC,KAAV,EAA2B;AAAA,QAAVQ,GAAU,uEAAJ,EAAI;AAChC,UAAMqC,IAAI,GAAG;AAACJ,MAAAA;AAAD,KAAb;AAEA,QAAIjC,GAAG,CAACsC,KAAR,EAAeD,IAAI,CAACC,KAAL,GAAatC,GAAG,CAACsC,KAAjB;AACf,QAAItC,GAAG,CAACuC,SAAR,EAAmBF,IAAI,CAACE,SAAL,GAAiBvC,GAAG,CAACuC,SAArB;AACnB,QAAIC,MAAM,CAACC,SAAP,CAAiBzC,GAAG,CAAC0C,QAArB,CAAJ,EAAoCL,IAAI,CAACK,QAAL,GAAgB1C,GAAG,CAAC0C,QAApB;AAEpC,WAAOR,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,OAApB,EAA6B3C,KAA7B,EAAoCQ,GAApC,EAAyCqC,IAAzC,CAAP;AACH,GA9DW;;AAgEZM,EAAAA,YAAY,CAACV,OAAD,EAAUW,GAAV,EAAe5C,GAAf,EAAoB;AAC5B,WAAOkC,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,UAApB,EAAgCS,GAAhC,EAAqC5C,GAArC,EAA0C;AAACiC,MAAAA;AAAD,KAA1C,CAAP;AACH,GAlEW;;AAoEZY,EAAAA,aAAa,CAACZ,OAAD,EAAUa,SAAV,EAAqB9C,GAArB,EAA0B;AACnC,WAAOkC,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,WAApB,EAAiCW,SAAjC,EAA4C9C,GAA5C,EAAiD;AAACiC,MAAAA;AAAD,KAAjD,CAAP;AACH,GAtEW;;AAwEZc,EAAAA,WAAW,CAACd,OAAD,EAAUvC,OAAV,EAAmBM,GAAnB,EAAwB;AAC/B,WAAOkC,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,SAApB,EAA+BzC,OAA/B,EAAwCM,GAAxC,EAA6C;AAACiC,MAAAA;AAAD,KAA7C,CAAP;AACH,GA1EW;;AA4EZe,EAAAA,SAAS,CAACf,OAAD,EAAUrC,KAAV,EAA2B;AAAA,QAAVI,GAAU,uEAAJ,EAAI;AAChC,UAAMqC,IAAI,GAAG;AAACJ,MAAAA;AAAD,KAAb;AAEA,QAAIO,MAAM,CAACC,SAAP,CAAiBzC,GAAG,CAAC0C,QAArB,CAAJ,EAAoCL,IAAI,CAACK,QAAL,GAAgB1C,GAAG,CAAC0C,QAApB;AACpC,QAAIF,MAAM,CAACC,SAAP,CAAiBzC,GAAG,CAACiD,KAArB,CAAJ,EAAiCZ,IAAI,CAACY,KAAL,GAAajD,GAAG,CAACiD,KAAjB;AACjC,QAAIT,MAAM,CAACC,SAAP,CAAiBzC,GAAG,CAACkD,MAArB,CAAJ,EAAkCb,IAAI,CAACa,MAAL,GAAclD,GAAG,CAACkD,MAAlB;;AAElC,QAAIlD,GAAG,CAACmD,iBAAR,EAA2B;AACvBd,MAAAA,IAAI,CAACe,kBAAL,GAA0B,IAA1B;AACH;;AAED,WAAOlB,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,OAApB,EAA6BvC,KAA7B,EAAoCI,GAApC,EAAyCqC,IAAzC,CAAP;AACH,GAxFW;;AA0FZgB,EAAAA,aAAa,EAAE;AACXvB,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,YAAZ,CADA;;AAEXwB,IAAAA,OAAO,CAACjB,IAAD,EAAiB;AAAA,UAAVrC,GAAU,uEAAJ,EAAI;AACpB,UAAIwC,MAAM,CAACC,SAAP,CAAiBzC,GAAG,CAAC0C,QAArB,CAAJ,EAAoCL,IAAI,CAACK,QAAL,GAAgB1C,GAAG,CAAC0C,QAApB;AACpC,UAAIF,MAAM,CAACC,SAAP,CAAiBzC,GAAG,CAACuD,MAArB,CAAJ,EAAkClB,IAAI,CAACkB,MAAL,GAAcvD,GAAG,CAACuD,MAAlB;AAClC,aAAOlB,IAAP;AACH;;AANU,GA1FH;;AAmGZmB,EAAAA,SAAS,CAACvB,OAAD,EAAUtC,KAAV,EAA2B;AAAA,QAAVK,GAAU,uEAAJ,EAAI;AAChC,UAAMqC,IAAI,GAAG;AAACJ,MAAAA;AAAD,KAAb;AAEA,QAAIO,MAAM,CAACC,SAAP,CAAiBzC,GAAG,CAAC0C,QAArB,CAAJ,EAAoCL,IAAI,CAACK,QAAL,GAAgB1C,GAAG,CAAC0C,QAApB;AAEpC,WAAOR,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,OAApB,EAA6BxC,KAA7B,EAAoCK,GAApC,EAAyCqC,IAAzC,CAAP;AACH,GAzGW;;AA2GZoB,EAAAA,YAAY,EAAE;AACV3B,IAAAA,SAAS,CAACG,OAAD,EAAUyB,QAAV,EAAoB;AACzB,aAAO;AACHzB,QAAAA,OADG;AACM0B,QAAAA,QAAQ,EAAED,QAAQ,CAAC,CAAD,CADxB;AAC6BE,QAAAA,SAAS,EAAEF,QAAQ,CAAC,CAAD;AADhD,OAAP;AAGH,KALS;;AAMVJ,IAAAA,OAAO,CAACjB,IAAD,EAAiB;AAAA,UAAVrC,GAAU,uEAAJ,EAAI;AACpB,UAAIwC,MAAM,CAACC,SAAP,CAAiBzC,GAAG,CAAC6D,UAArB,CAAJ,EAAsCxB,IAAI,CAACyB,WAAL,GAAmB9D,GAAG,CAAC6D,UAAvB;AACtC,aAAOxB,IAAP;AACH;;AATS,GA3GF;AAuHZ0B,EAAAA,uBAAuB,EAAE;AACrBjC,IAAAA,SAAS,GAAW;AAAA,UAAV9B,GAAU,uEAAJ,EAAI;AAChB,YAAMqC,IAAI,GAAG,EAAb;AAEA,UAAIrC,GAAG,CAAC2D,QAAR,EAAkBtB,IAAI,CAACsB,QAAL,GAAgB3D,GAAG,CAAC2D,QAApB;AAClB,UAAI3D,GAAG,CAAC4D,SAAR,EAAmBvB,IAAI,CAACuB,SAAL,GAAiB5D,GAAG,CAAC4D,SAArB;AAEnB,UAAI5D,GAAG,CAACgE,MAAR,EAAgB3B,IAAI,CAACJ,OAAL,GAAejC,GAAG,CAACgE,MAAnB;AAChB,UAAIhE,GAAG,CAACiE,SAAR,EAAmB5B,IAAI,CAAC6B,UAAL,GAAkBlE,GAAG,CAACiE,SAAtB;AACnB,UAAIjE,GAAG,CAACmE,eAAR,EAAyB9B,IAAI,CAAC+B,iBAAL,GAAyBpE,GAAG,CAACmE,eAA7B;AAEzB,aAAO9B,IAAP;AACH;;AAZoB,GAvHb;AAsIZgC,EAAAA,uBAAuB,EAAE;AACrBvC,IAAAA,SAAS,GAAW;AAAA,UAAV9B,GAAU,uEAAJ,EAAI;AAChB,YAAMqC,IAAI,GAAG,EAAb;AAEA,UAAIrC,GAAG,CAACgE,MAAR,EAAgB3B,IAAI,CAACJ,OAAL,GAAejC,GAAG,CAACgE,MAAnB;AAChB,UAAIhE,GAAG,CAACiE,SAAR,EAAmB5B,IAAI,CAAC6B,UAAL,GAAkBlE,GAAG,CAACiE,SAAtB;AACnB,UAAIjE,GAAG,CAACmE,eAAR,EAAyB9B,IAAI,CAAC+B,iBAAL,GAAyBpE,GAAG,CAACmE,eAA7B;AAEzB,aAAO9B,IAAP;AACH;;AAToB,GAtIb;AAkJZiC,EAAAA,gBAAgB,EAAE;AACdxC,IAAAA,SAAS,CAACyC,KAAD,EAAkB;AAAA,UAAVvE,GAAU,uEAAJ,EAAI;AACvB,YAAMqC,IAAI,GAAG,EAAb;AAEA,UAAIrC,GAAG,CAACgE,MAAR,EAAgB3B,IAAI,CAACJ,OAAL,GAAejC,GAAG,CAACgE,MAAnB;AAChB,UAAIhE,GAAG,CAACiE,SAAR,EAAmB5B,IAAI,CAAC6B,UAAL,GAAkBlE,GAAG,CAACiE,SAAtB;AACnB,UAAIjE,GAAG,CAACmE,eAAR,EAAyB9B,IAAI,CAAC+B,iBAAL,GAAyBpE,GAAG,CAACmE,eAA7B;AAEzB9B,MAAAA,IAAI,CAACkC,KAAL,GAAaC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAb;AAEA,aAAOlC,IAAP;AACH;;AAXa,GAlJN;AAgKZqC,EAAAA,SAAS,EAAE;AACP5C,IAAAA,SAAS,CAACG,OAAD,EAAUyB,QAAV,EAAoBpB,KAApB,EAA2BqC,OAA3B,EAAoC;AACzC,aAAO;AACH1C,QAAAA,OADG;AACM0B,QAAAA,QAAQ,EAAED,QAAQ,CAAC,CAAD,CADxB;AAC6BE,QAAAA,SAAS,EAAEF,QAAQ,CAAC,CAAD,CADhD;AACqDpB,QAAAA,KADrD;AAC4DqC,QAAAA;AAD5D,OAAP;AAGH,KALM;;AAMPrB,IAAAA,OAAO,CAACjB,IAAD,EAAiB;AAAA,UAAVrC,GAAU,uEAAJ,EAAI;AACpB,UAAIA,GAAG,CAAC4E,YAAR,EAAsBvC,IAAI,CAACwC,aAAL,GAAqB7E,GAAG,CAAC4E,YAAzB;AACtB,UAAI5E,GAAG,CAAC8E,cAAR,EAAwBzC,IAAI,CAAC0C,eAAL,GAAuB/E,GAAG,CAAC8E,cAA3B;AACxB,aAAOzC,IAAP;AACH;;AAVM,GAhKC;AA6KZ2C,EAAAA,WAAW,EAAE;AACTlD,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,cAAZ,EAA4B,YAA5B,EAA0C,WAA1C;AADF,GA7KD;AAiLZmD,EAAAA,cAAc,EAAE;AACZC,IAAAA,KAAK,EAAE,YADK;AAEZpD,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,QAAZ;AAFC,GAjLJ;AAsLZqD,EAAAA,oBAAoB,EAAE;AAClBD,IAAAA,KAAK,EAAE,cADW;AAElBpD,IAAAA,SAAS,EAAE,SAFO;;AAGlBwB,IAAAA,OAAO,CAACjB,IAAD,EAAiB;AAAA,UAAVrC,GAAU,uEAAJ,EAAI;AACpB,UAAIA,GAAG,CAACoF,MAAR,EAAgB/C,IAAI,CAAC+C,MAAL,GAAcpF,GAAG,CAACoF,MAAlB;AAChB,UAAIpF,GAAG,CAACqF,KAAR,EAAehD,IAAI,CAACgD,KAAL,GAAarF,GAAG,CAACqF,KAAjB;AACf,aAAOhD,IAAP;AACH;;AAPiB,GAtLV;;AAgMZiD,EAAAA,OAAO,CAACC,OAAD,EAAU;AACb,WAAO,KAAKtH,OAAL,CAAc,UAAd,EAAyB;AAACsH,MAAAA;AAAD,KAAzB,EAAoCC,IAApC,CAAyCC,IAAI,IAAI;AACpD,YAAMC,MAAM,GAAGD,IAAI,CAACC,MAApB;AACAA,MAAAA,MAAM,CAACC,QAAP,GAAkB,KAAKA,QAAL,GAAgBD,MAAM,CAACE,SAAzC;AACA,aAAOF,MAAP;AACH,KAJM,CAAP;AAKH,GAtMW;;AAwMZG,EAAAA,QAAQ,EAAE;AACN/D,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,iBAAZ;AADL,GAxME;AA4MZgE,EAAAA,YAAY,EAAE;AACVhE,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,OAAZ,CADD;;AAEVwB,IAAAA,OAAO,CAACjB,IAAD,EAAiB;AAAA,UAAVrC,GAAU,uEAAJ,EAAI;AACpB,UAAIA,GAAG,CAAC+F,KAAR,EAAe1D,IAAI,CAAC0D,KAAL,GAAa/F,GAAG,CAAC+F,KAAjB;AACf,UAAI/F,GAAG,CAACgE,MAAR,EAAgB3B,IAAI,CAACJ,OAAL,GAAejC,GAAG,CAACgE,MAAnB;AAChB,UAAIhE,GAAG,CAACiE,SAAR,EAAmB5B,IAAI,CAAC6B,UAAL,GAAkBlE,GAAG,CAACiE,SAAtB;AACnB,UAAIjE,GAAG,CAACmE,eAAR,EAAyB9B,IAAI,CAAC+B,iBAAL,GAAyBpE,GAAG,CAACmE,eAA7B;AACzB,UAAInE,GAAG,CAACgG,kBAAR,EAA4B3D,IAAI,CAAC4D,oBAAL,GAA4BjG,GAAG,CAACgG,kBAAhC;AAC5B,aAAO3D,IAAP;AACH;;AATS,GA5MF;AAwNZ6D,EAAAA,iBAAiB,EAAE;AACfpE,IAAAA,SAAS,EAAE,CAAC,SAAD,CADI;;AAEfwB,IAAAA,OAAO,CAACjB,IAAD,EAAiB;AAAA,UAAVrC,GAAU,uEAAJ,EAAI;AACpB,UAAIA,GAAG,CAACgE,MAAR,EAAgB3B,IAAI,CAACJ,OAAL,GAAejC,GAAG,CAACgE,MAAnB;AAChB,UAAIhE,GAAG,CAACiE,SAAR,EAAmB5B,IAAI,CAAC6B,UAAL,GAAkBlE,GAAG,CAACiE,SAAtB;AACnB,UAAIjE,GAAG,CAACmE,eAAR,EAAyB9B,IAAI,CAAC+B,iBAAL,GAAyBpE,GAAG,CAACmE,eAA7B;AACzB,aAAO9B,IAAP;AACH;;AAPc,GAxNP;AAkOZ8D,EAAAA,WAAW,EAAE;AACTrE,IAAAA,SAAS,EAAE,CAAC,SAAD,CADF;;AAETwB,IAAAA,OAAO,CAACjB,IAAD,EAAiB;AAAA,UAAVrC,GAAU,uEAAJ,EAAI;AACpB,YAAMT,KAAK,GAAGS,GAAG,CAACT,KAAJ,IAAa,EAA3B;AACA,YAAM6G,IAAI,GAAGpG,GAAG,CAACoG,IAAJ,IAAY,EAAzB;AAEA/D,MAAAA,IAAI,CAACC,KAAL,GAAatC,GAAG,CAACsC,KAAjB;AACAD,MAAAA,IAAI,CAACgE,WAAL,GAAmBrG,GAAG,CAACqG,WAAvB;AACAhE,MAAAA,IAAI,CAACiE,OAAL,GAAetG,GAAG,CAACsG,OAAnB;AACAjE,MAAAA,IAAI,CAACkE,cAAL,GAAsBvG,GAAG,CAACwG,aAA1B;AACAnE,MAAAA,IAAI,CAACoE,eAAL,GAAuBzG,GAAG,CAAC0G,cAA3B;AACArE,MAAAA,IAAI,CAACsE,QAAL,GAAgB3G,GAAG,CAAC2G,QAApB;AACAtE,MAAAA,IAAI,CAACuE,6BAAL,GAAqC5G,GAAG,CAAC6G,yBAAzC;AACAxE,MAAAA,IAAI,CAACyE,sBAAL,GAA8B9G,GAAG,CAAC+G,mBAAlC;AACA1E,MAAAA,IAAI,CAAC2E,MAAL,GAAcxC,IAAI,CAACC,SAAL,CAAezE,GAAG,CAACgH,MAAnB,CAAd;AACA3E,MAAAA,IAAI,CAAC4E,aAAL,GAAqBzC,IAAI,CAACC,SAAL,CAAezE,GAAG,CAACkH,YAAnB,CAArB;AAEA,UAAI3H,KAAK,CAACuB,GAAV,EAAeuB,IAAI,CAAC8E,SAAL,GAAiB5H,KAAK,CAACuB,GAAvB;AACf,UAAI0B,MAAM,CAACC,SAAP,CAAiBlD,KAAK,CAAC6H,IAAvB,CAAJ,EAAkC/E,IAAI,CAACgF,UAAL,GAAkB9H,KAAK,CAAC6H,IAAxB;AAClC,UAAI5E,MAAM,CAACC,SAAP,CAAiBlD,KAAK,CAAC0D,KAAvB,CAAJ,EAAmCZ,IAAI,CAACiF,WAAL,GAAmB/H,KAAK,CAAC0D,KAAzB;AACnC,UAAIT,MAAM,CAACC,SAAP,CAAiBlD,KAAK,CAAC2D,MAAvB,CAAJ,EAAoCb,IAAI,CAACkF,YAAL,GAAoBhI,KAAK,CAAC2D,MAA1B;AAEpC,UAAIkD,IAAI,CAACoB,IAAL,KAAc,IAAlB,EAAwBnF,IAAI,CAACoF,SAAL,GAAiBrB,IAAI,CAACoB,IAAtB;AACxB,UAAIpB,IAAI,CAACsB,WAAL,KAAqB,IAAzB,EAA+BrF,IAAI,CAACsF,iBAAL,GAAyBvB,IAAI,CAACsB,WAA9B;AAC/B,UAAItB,IAAI,CAACwB,KAAL,KAAe,IAAnB,EAAyBvF,IAAI,CAACwF,UAAL,GAAkBzB,IAAI,CAACwB,KAAvB;AACzB,UAAIxB,IAAI,CAAC0B,eAAL,KAAyB,IAA7B,EAAmCzF,IAAI,CAAC0F,qBAAL,GAA6B3B,IAAI,CAAC0B,eAAlC;AAEnC,UAAI9H,GAAG,CAACgI,UAAJ,KAAmB,IAAvB,EAA6B3F,IAAI,CAAC4F,WAAL,GAAmBjI,GAAG,CAACgI,UAAvB;AAE7B,aAAO3F,IAAP;AACH;;AA9BQ,GAlOD;AAmQZ6F,EAAAA,cAAc,EAAE;AACZpG,IAAAA,SAAS,CAACG,OAAD,EAAUkG,SAAV,EAAqB;AAC1B,aAAO;AACHlG,QAAAA,OADG;AAEHsC,QAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAe0D,SAAf;AAFJ,OAAP;AAIH;;AANW,GAnQJ;AA4QZC,EAAAA,aAAa,EAAE;AACXtG,IAAAA,SAAS,EAAE,CAAC,MAAD;AADA,GA5QH;;AAgRZuG,EAAAA,iBAAiB,CAACC,OAAD,EAAU5I,OAAV,EAAmBM,GAAnB,EAAwB;AACrC,WAAOkC,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,aAApB,EAAmCzC,OAAnC,EAA4CM,GAA5C,EAAiD;AAACsI,MAAAA;AAAD,KAAjD,EAA4D,mBAA5D,CAAP;AACH,GAlRW;;AAoRZC,EAAAA,mBAAmB,CAACD,OAAD,EAAUd,IAAV,EAAgBlF,KAAhB,EAAuB5C,OAAvB,EAAgC8I,MAAhC,EAAkD;AAAA,QAAVxI,GAAU,uEAAJ,EAAI;AACjE,UAAMqC,IAAI,GAAG;AAACiG,MAAAA,OAAD;AAAUd,MAAAA,IAAV;AAAgBlF,MAAAA,KAAhB;AAAuBkG,MAAAA;AAAvB,KAAb;AACA,QAAIxI,GAAG,CAACyI,aAAR,EAAuBpG,IAAI,CAACqG,cAAL,GAAsB1I,GAAG,CAACyI,aAA1B;AACvB,QAAIzI,GAAG,CAAC2I,YAAR,EAAsBtG,IAAI,CAACuG,aAAL,GAAqB5I,GAAG,CAAC2I,YAAzB;AACtB,WAAOzG,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,aAApB,EAAmCzC,OAAnC,EAA4CM,GAA5C,EAAiDqC,IAAjD,EAAuD,qBAAvD,CAAP;AACH,GAzRW;;AA2RZwG,EAAAA,iBAAiB,EAAE;AACf/G,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,kBAAZ;AADI,GA3RP;AA+RZgH,EAAAA,oBAAoB,EAAE;AAClBhH,IAAAA,SAAS,EAAE,CAAC,SAAD;AADO,GA/RV;;AAmSZiH,EAAAA,eAAe,CAACT,OAAD,EAAUd,IAAV,EAAgB9H,OAAhB,EAAyB8I,MAAzB,EAA2C;AAAA,QAAVxI,GAAU,uEAAJ,EAAI;AACtD,UAAMqC,IAAI,GAAG;AAACiG,MAAAA,OAAD;AAAUd,MAAAA,IAAV;AAAgBgB,MAAAA;AAAhB,KAAb;AACA,QAAIxI,GAAG,CAAC2I,YAAR,EAAsBtG,IAAI,CAACuG,aAAL,GAAqB5I,GAAG,CAAC2I,YAAzB;AACtB,WAAOzG,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,aAApB,EAAmCzC,OAAnC,EAA4CM,GAA5C,EAAiDqC,IAAjD,EAAuD,iBAAvD,CAAP;AACH,GAvSW;;AAySZ2G,EAAAA,uBAAuB,EAAE;AACrBlH,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,UAAZ;AADU,GAzSb;AA6SZmH,EAAAA,oBAAoB,EAAE;AAClBnH,IAAAA,SAAS,EAAE,CAAC,SAAD;AADO,GA7SV;AAiTZoH,EAAAA,OAAO,EAAE;AACLpH,IAAAA,SAAS,EAAE,CAAC,SAAD;AADN,GAjTG;AAqTZqH,EAAAA,SAAS,EAAE;AACPrH,IAAAA,SAAS,EAAE,CAAC,SAAD;AADJ,GArTC;AAyTZsH,EAAAA,qBAAqB,EAAE;AACnBlE,IAAAA,KAAK,EAAE,WADY;AAEnBpD,IAAAA,SAAS,EAAE,CAAC,SAAD;AAFQ,GAzTX;AA8TZuH,EAAAA,aAAa,EAAE;AACXnE,IAAAA,KAAK,EAAE,WADI;AAEXpD,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,SAAZ;AAFA,GA9TH;AAmUZwH,EAAAA,mBAAmB,EAAE;AACjBpE,IAAAA,KAAK,EAAE,cADU;AAEjBpD,IAAAA,SAAS,EAAE,CAAC,SAAD;AAFM,GAnUT;AAwUZyH,EAAAA,cAAc,EAAE;AACZrE,IAAAA,KAAK,EAAE,MADK;AAEZpD,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFC;;AAGZwB,IAAAA,OAAO,CAACjB,IAAD,EAAOrC,GAAP,EAAY;AACf,UAAIA,GAAG,CAACwJ,SAAR,EAAmBnH,IAAI,CAACoH,UAAL,GAAkBzJ,GAAG,CAACwJ,SAAtB;AACnB,aAAOnH,IAAP;AACH;;AANW,GAxUJ;AAiVZqH,EAAAA,eAAe,EAAE;AACbxE,IAAAA,KAAK,EAAE,OADM;AAEbpD,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,SAAZ;AAFE,GAjVL;AAsVZ6H,EAAAA,kBAAkB,EAAE;AAChB7H,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,SAAZ,CADK;;AAEhBwB,IAAAA,OAAO,CAACjB,IAAD,EAAOrC,GAAP,EAAY;AACf,UAAIA,GAAG,CAACwJ,SAAR,EAAmBnH,IAAI,CAACoH,UAAL,GAAkBzJ,GAAG,CAACwJ,SAAtB;AACnB,UAAIxJ,GAAG,CAAC4J,eAAR,EAAyBvH,IAAI,CAACwH,iBAAL,GAAyB7J,GAAG,CAAC4J,eAA7B;AACzB,UAAI5J,GAAG,CAAC8J,oBAAR,EAA8BzH,IAAI,CAAC0H,uBAAL,GAA+B/J,GAAG,CAAC8J,oBAAnC;AAC9B,UAAI9J,GAAG,CAACgK,oBAAR,EAA8B3H,IAAI,CAAC4H,uBAAL,GAA+BjK,GAAG,CAACgK,oBAAnC;AAC9B,UAAIhK,GAAG,CAACkK,qBAAR,EAA+B7H,IAAI,CAAC8H,yBAAL,GAAiCnK,GAAG,CAACkK,qBAArC;AAC/B,aAAO7H,IAAP;AACH;;AATe,GAtVR;AAkWZ+H,EAAAA,iBAAiB,EAAE;AACftI,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,SAAZ,CADI;;AAEfwB,IAAAA,OAAO,CAACjB,IAAD,EAAOrC,GAAP,EAAY;AACf,UAAIA,GAAG,CAACqK,aAAR,EAAuBhI,IAAI,CAACiI,eAAL,GAAuBtK,GAAG,CAACqK,aAA3B;AACvB,UAAIrK,GAAG,CAACuK,eAAR,EAAyBlI,IAAI,CAACmI,iBAAL,GAAyBxK,GAAG,CAACuK,eAA7B;AACzB,UAAIvK,GAAG,CAACyK,eAAR,EAAyBpI,IAAI,CAACqI,iBAAL,GAAyB1K,GAAG,CAACyK,eAA7B;AACzB,UAAIzK,GAAG,CAAC2K,iBAAR,EAA2BtI,IAAI,CAACuI,mBAAL,GAA2B5K,GAAG,CAAC2K,iBAA/B;AAC3B,UAAI3K,GAAG,CAAC6K,cAAR,EAAwBxI,IAAI,CAACyI,gBAAL,GAAwB9K,GAAG,CAAC6K,cAA5B;AACxB,UAAI7K,GAAG,CAAC+K,kBAAR,EAA4B1I,IAAI,CAAC2I,oBAAL,GAA4BhL,GAAG,CAAC+K,kBAAhC;AAC5B,UAAI/K,GAAG,CAACiL,cAAR,EAAwB5I,IAAI,CAAC6I,gBAAL,GAAwBlL,GAAG,CAACiL,cAA5B;AACxB,UAAIjL,GAAG,CAACmL,iBAAR,EAA2B9I,IAAI,CAAC+I,mBAAL,GAA2BpL,GAAG,CAACmL,iBAA/B;AAC3B,aAAO9I,IAAP;AACH;;AAZc,GAlWP;AAiXZgJ,EAAAA,oBAAoB,EAAE;AAClBvJ,IAAAA,SAAS,EAAE,CAAC,SAAD;AADO,GAjXV;;AAqXZwJ,EAAAA,YAAY,CAACrJ,OAAD,EAAU1C,KAAV,EAAiBS,GAAjB,EAAsB;AAC9B,WAAOkC,QAAQ,CAACC,IAAT,CAAc,IAAd,EAAoB,OAApB,EAA6B5C,KAA7B,EAAoCS,GAApC,EAAyC;AAACiC,MAAAA;AAAD,KAAzC,EAAoD,cAApD,CAAP;AACH,GAvXW;;AAyXZsJ,EAAAA,eAAe,EAAE;AACbzJ,IAAAA,SAAS,EAAE,CAAC,SAAD;AADE,GAzXL;AA6XZ0J,EAAAA,YAAY,EAAE;AACV1J,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,OAAZ;AADD,GA7XF;AAiYZ2J,EAAAA,kBAAkB,EAAE;AAChB3J,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,aAAZ;AADK,GAjYR;AAqYZ4J,EAAAA,cAAc,EAAE;AACZ5J,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,YAAZ;AADC,GArYJ;AAyYZ6J,EAAAA,gBAAgB,EAAE;AACd7J,IAAAA,SAAS,EAAE,CAAC,SAAD;AADG,GAzYN;AA6YZ8J,EAAAA,iBAAiB,EAAE;AACf1G,IAAAA,KAAK,EAAE,aADQ;;AAEfpD,IAAAA,SAAS,CAAC+J,OAAD,EAAU;AACf,YAAMC,IAAI,GAAG;AACTC,QAAAA,eAAe,EAAEF,OAAO,CAACnK,EADhB;AAETsK,QAAAA,OAAO,EAAEH,OAAO,CAACG,OAAR,EAFA;AAGTC,QAAAA,WAAW,EAAEJ,OAAO,CAACK,UAHZ;AAITC,QAAAA,WAAW,EAAEN,OAAO,CAACO,QAJZ;AAKTC,QAAAA,UAAU,EAAER,OAAO,CAACS;AALX,OAAb;AAQA,UAAIT,OAAO,CAACU,MAAR,KAAmBrM,SAAvB,EAAkC4L,IAAI,CAACU,cAAL,GAAsBX,OAAO,CAACU,MAA9B;AAClC,UAAIV,OAAO,CAACY,WAAR,KAAwBvM,SAA5B,EAAuC4L,IAAI,CAACY,mBAAL,GAA2Bb,OAAO,CAACY,WAAnC;AAEvC,aAAOX,IAAP;AACH;;AAfc,GA7YP;AA+ZZa,EAAAA,mBAAmB,EAAE;AACjBzH,IAAAA,KAAK,EAAE,gBADU;AAEjBpD,IAAAA,SAAS,EAAE,CAAC,mBAAD,CAFM;;AAGjBwB,IAAAA,OAAO,CAACjB,IAAD,EAAOrC,GAAP,EAAY;AACf,UAAIA,GAAG,CAACS,IAAR,EAAc4B,IAAI,CAAC5B,IAAL,GAAYT,GAAG,CAACS,IAAhB;AACd,UAAIT,GAAG,CAACc,GAAR,EAAauB,IAAI,CAACvB,GAAL,GAAWd,GAAG,CAACc,GAAf;AACb,UAAId,GAAG,CAAC4M,SAAR,EAAmBvK,IAAI,CAACwK,UAAL,GAAkB7M,GAAG,CAAC4M,SAAtB;AACnB,UAAI5M,GAAG,CAACsM,SAAR,EAAmBjK,IAAI,CAACgK,UAAL,GAAkBrM,GAAG,CAACsM,SAAtB;AACnB,aAAOjK,IAAP;AACH;;AATgB,GA/ZT;AA2aZyK,EAAAA,mBAAmB,EAAE;AACjBhL,IAAAA,SAAS,EAAE,CAAC,mBAAD,EAAsB,IAAtB,CADM;;AAEjBwB,IAAAA,OAAO,CAACjB,IAAD,EAAOrC,GAAP,EAAY;AACf,UAAIA,GAAG,CAAC+M,eAAR,EAAyB1K,IAAI,CAAC2K,gBAAL,GAAwBhN,GAAG,CAAC+M,eAA5B;AACzB,UAAI/M,GAAG,CAACiN,YAAR,EAAsB5K,IAAI,CAAC6K,aAAL,GAAqBlN,GAAG,CAACiN,YAAzB;AACtB,aAAO5K,IAAP;AACH;;AANgB,GA3aT;AAobZ8K,EAAAA,sBAAsB,EAAE;AACpBrL,IAAAA,SAAS,EAAE,CAAC,uBAAD,EAA0B,IAA1B,CADS;;AAEpBwB,IAAAA,OAAO,CAACjB,IAAD,EAAOrC,GAAP,EAAY;AACf,UAAIA,GAAG,CAACiN,YAAR,EAAsB5K,IAAI,CAAC6K,aAAL,GAAqBlN,GAAG,CAACiN,YAAzB;AACtB,aAAO5K,IAAP;AACH;;AALmB,GApbZ;AA4bZ+K,EAAAA,aAAa,EAAE;AACXtL,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,YAAZ;AADA,GA5bH;AAgcZuL,EAAAA,eAAe,EAAE;AACbnI,IAAAA,KAAK,EAAE,UADM;AAEbpD,IAAAA,SAAS,EAAE,CAACwL,GAAD,EAAM7M,IAAN,KAAe8M,UAAU,CAACD,GAAD,EAAM;AAAC7M,MAAAA;AAAD,KAAN;AAFvB,GAhcL;AAqcZ+M,EAAAA,kBAAkB,EAAE;AAChBtI,IAAAA,KAAK,EAAE,aADS;AAEhBpD,IAAAA,SAAS,EAAE,CAACwL,GAAD,EAAMG,OAAN,KAAkBF,UAAU,CAACD,GAAD,EAAM;AAACG,MAAAA;AAAD,KAAN;AAFvB,GArcR;AA0cZC,EAAAA,sBAAsB,EAAE;AACpBxI,IAAAA,KAAK,EAAE,YADa;AAEpBpD,IAAAA,SAAS,EAAE,CAACwL,GAAD,EAAMK,YAAN,KAAuBJ,UAAU,CAACD,GAAD,EAAM;AAACK,MAAAA;AAAD,KAAN;AAFxB,GA1cZ;;AA+cZC,EAAAA,UAAU,CAAC9M,GAAD,EAAM+M,WAAN,EAAmBC,cAAnB,EAAmCC,cAAnC,EAAmD;AACzD,UAAM1L,IAAI,GAAG;AAACvB,MAAAA;AAAD,KAAb;;AAEA,QAAIkN,KAAK,CAACC,OAAN,CAAcH,cAAd,CAAJ,EAAmC;AAC/BzL,MAAAA,IAAI,CAAC6L,eAAL,GAAuBJ,cAAvB;AACH;;AAED,QAAItL,MAAM,CAACC,SAAP,CAAiBsL,cAAjB,CAAJ,EAAsC;AAClC1L,MAAAA,IAAI,CAAC8L,eAAL,GAAuBJ,cAAvB;AACH;;AAED,QAAIF,WAAJ,EAAiB;AACbxL,MAAAA,IAAI,CAACwL,WAAL,GAAmB;AACfO,QAAAA,KAAK,EAAExQ,EAAE,CAACyQ,YAAH,CAAgBR,WAAhB,CADQ;AAEfvK,QAAAA,OAAO,EAAE;AACLgL,UAAAA,QAAQ,EAAE;AADL;AAFM,OAAnB;AAMA,aAAO,KAAKrQ,OAAL,CAAa,aAAb,EAA4B,IAA5B,EAAkCoE,IAAlC,CAAP;AACH;;AAED,WAAO,KAAKpE,OAAL,CAAa,aAAb,EAA4BoE,IAA5B,CAAP;AACH,GAreW;;AAueZkM,EAAAA,cAAc,EAAE,EAveJ;AAyeZC,EAAAA,aAAa,EAAE,EAzeH;AA2eZC,EAAAA,QAAQ,EAAE;AACN3M,IAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,OAAZ;AADL;AA3eE,CAAhB,C,CAgfA;;AAEA,SAASyL,UAAT,CAAoBD,GAApB,EAAyBjL,IAAzB,EAA+B;AAC3B,MAAIiL,GAAG,CAACtJ,MAAJ,IAAcsJ,GAAG,CAACrJ,SAAtB,EAAiC;AAC7B5B,IAAAA,IAAI,CAACJ,OAAL,GAAeqL,GAAG,CAACtJ,MAAnB;AACA3B,IAAAA,IAAI,CAAC6B,UAAL,GAAkBoJ,GAAG,CAACrJ,SAAtB;AACH,GAHD,MAGO,IAAIqJ,GAAG,CAACoB,WAAR,EAAqB;AACxBrM,IAAAA,IAAI,CAAC+B,iBAAL,GAAyBkJ,GAAG,CAACoB,WAA7B;AACH;;AACD,SAAOrM,IAAP;AACH;;AAED,SAASH,QAAT,CAAkB1B,IAAlB,EAAwBiF,IAAxB,EAAoE;AAAA,MAAtCzF,GAAsC,uEAAhC,EAAgC;AAAA,MAA5B2O,UAA4B,uEAAf,EAAe;AAAA,MAAXC,SAAW;AAEhE,QAAMvM,IAAI,GAAG,KAAKwM,UAAL,CAAgBF,UAAhB,EAA4B3O,GAA5B,CAAb;AACA,QAAM8O,WAAW,GAAI,QAAOxP,uBAAuB,CAACkB,IAAD,CAAO,EAA1D;AAEA,QAAMM,GAAG,GAAG8N,SAAS,GAAGA,SAAH,GAAe,SAASpO,IAAI,CAACuO,MAAL,CAAY,CAAZ,EAAeC,WAAf,EAAT,GAAwCxO,IAAI,CAACyO,KAAL,CAAW,CAAX,CAA5E,CALgE,CAOhE;;AACA,OAAKC,KAAL,CAAWpO,GAAX,EAAgB,GAAGmO,KAAH,CAAS9M,IAAT,CAAcL,SAAd,EAAyBqN,MAAzB,CAAgC,CAAhC,EAAmC,CAAnC,CAAhB,EARgE,CAUhE;;AACA,MAAInP,GAAG,CAACyN,OAAR,EAAiBpL,IAAI,CAACoL,OAAL,GAAezN,GAAG,CAACyN,OAAnB;;AAEjB,MAAIhI,IAAI,YAAYzH,MAAM,CAACoR,MAA3B,EAAmC;AAC/B;AACA,QAAI,CAACpP,GAAG,CAACqP,QAAT,EAAmB;AACfrP,MAAAA,GAAG,CAACqP,QAAJ,GAAevR,IAAI,CAACwR,KAAL,CAAWvR,IAAI,CAACwR,QAAL,CAAc9J,IAAI,CAAC1H,IAAnB,CAAX,EAAqCyR,QAApD;AACH;;AACDnN,IAAAA,IAAI,CAAC7B,IAAD,CAAJ,GAAa;AACT4N,MAAAA,KAAK,EAAE3I,IADE;AAETnC,MAAAA,OAAO,EAAE;AAACgL,QAAAA,QAAQ,EAAEtO,GAAG,CAACqP;AAAf;AAFA,KAAb;AAIH,GATD,MASO,IAAII,MAAM,CAACC,QAAP,CAAgBjK,IAAhB,CAAJ,EAA2B;AAC9B;AACA,QAAI,CAACzF,GAAG,CAACqP,QAAT,EAAmBrP,GAAG,CAACqP,QAAJ,GAAeP,WAAf;AACnBzM,IAAAA,IAAI,CAAC7B,IAAD,CAAJ,GAAa;AACT4N,MAAAA,KAAK,EAAE3I,IADE;AAETnC,MAAAA,OAAO,EAAE;AAACgL,QAAAA,QAAQ,EAAEtO,GAAG,CAACqP;AAAf;AAFA,KAAb;AAIH,GAPM,MAOA,IAAIxP,UAAU,CAAC8P,IAAX,CAAgBlK,IAAhB,CAAJ,EAA2B;AAC9B;AACA,QAAI,CAACzF,GAAG,CAACqP,QAAT,EAAmB;AACfrP,MAAAA,GAAG,CAACqP,QAAJ,GAAetR,IAAI,CAACwR,QAAL,CAAczR,IAAI,CAACwR,KAAL,CAAW7J,IAAX,EAAiB+J,QAA/B,KAA4CV,WAA3D;AACH;;AACD,QAAI9O,GAAG,CAAC4P,cAAJ,KAAuB,IAA3B,EAAiC;AAC7B;AACAvN,MAAAA,IAAI,CAAC7B,IAAD,CAAJ,GAAa;AACT4N,QAAAA,KAAK,EAAEnQ,OAAO,CAAC4R,GAAR,CAAYpK,IAAZ,CADE;AAETnC,QAAAA,OAAO,EAAE;AAACgL,UAAAA,QAAQ,EAAEtO,GAAG,CAACqP;AAAf;AAFA,OAAb;AAIH,KAND,MAMO;AACH;AACAhN,MAAAA,IAAI,CAAC7B,IAAD,CAAJ,GAAaiF,IAAb;AACH;AACJ,GAfM,MAeA,IAAI7H,EAAE,CAACkS,UAAH,CAAcrK,IAAd,CAAJ,EAAyB;AAC5B;AACA,QAAI,CAACzF,GAAG,CAACqP,QAAT,EAAmBrP,GAAG,CAACqP,QAAJ,GAAetR,IAAI,CAACwR,QAAL,CAAc9J,IAAd,CAAf;AACnBpD,IAAAA,IAAI,CAAC7B,IAAD,CAAJ,GAAa;AACT4N,MAAAA,KAAK,EAAExQ,EAAE,CAACmS,gBAAH,CAAoBtK,IAApB,CADE;AAETnC,MAAAA,OAAO,EAAE;AAACgL,QAAAA,QAAQ,EAAEtO,GAAG,CAACqP;AAAf;AAFA,KAAb;AAIH,GAPM,MAOA;AACH;AACAhN,IAAAA,IAAI,CAAC7B,IAAD,CAAJ,GAAaiF,IAAb;AACH;;AAED,SAAO,KAAKxH,OAAL,CAAc,IAAG6C,GAAI,EAArB,EAAwB,IAAxB,EAA8BuB,IAA9B,EAAoCmD,IAApC,CAA0CwK,QAAD,IAAcA,QAAQ,CAACtK,MAAhE,CAAP;AAEH;AAED;;;AAEA,MAAM/D,UAAN,CAAiB;AAEbsO,EAAAA,WAAW,CAACvO,EAAD,EAAe;AAAA,QAAV1B,GAAU,uEAAJ,EAAI;AACtB,SAAK0B,EAAL,GAAUA,EAAV;AACA,SAAK4K,SAAL,GAAiB9J,MAAM,CAACxC,GAAG,CAACsM,SAAL,CAAN,IAAyB,GAA1C;AACA,SAAKJ,UAAL,GAAkBlM,GAAG,CAACkM,UAAJ,KAAmBhM,SAAnB,GAA+B,IAA/B,GAAsCF,GAAG,CAACkM,UAA5D;AACA,SAAKE,QAAL,GAAgBpM,GAAG,CAACoM,QAAJ,KAAiBlM,SAAjB,GAA6B,KAA7B,GAAqCF,GAAG,CAACoM,QAAzD;AACA,SAAKG,MAAL,GAAcvM,GAAG,CAACuM,MAAlB;AACA,SAAKE,WAAL,GAAmBzM,GAAG,CAACyM,WAAvB;AACA,SAAKyD,IAAL,GAAY,EAAZ;AACH;;AAEDC,EAAAA,GAAG,CAAC3P,IAAD,EAAiB;AAAA,QAAV4P,GAAU,uEAAJ,EAAI;AAChBA,IAAAA,GAAG,CAAC5P,IAAJ,GAAWA,IAAX;AACA,SAAK0P,IAAL,CAAUG,IAAV,CAAeD,GAAf;AACA,WAAOA,GAAP;AACH;;AAEDpE,EAAAA,OAAO,GAAG;AACN,WAAOxH,IAAI,CAACC,SAAL,CAAe,KAAKyL,IAApB,CAAP;AACH;;AApBY,C,CAwBjB;;;AACA;AACI,OAAK,IAAII,IAAT,IAAiBpS,cAAjB,EAAiC;AAC7ByD,IAAAA,UAAU,CAAC4O,SAAX,CAAqBD,IAArB,IAA6B,CAAC9I,IAAI,IAAI;AAClC,aAAO,UAAU4I,GAAV,EAAe;AAClB,eAAO,KAAKD,GAAL,CAAS3I,IAAT,EAAe4I,GAAf,CAAP;AACH,OAFD;AAGH,KAJ4B,EAI1BlS,cAAc,CAACoS,IAAD,CAJY,CAA7B;AAKH;AACJ,C,CAED;;AACAE,MAAM,CAACC,OAAP,GAAiB3Q,OAAjB","sourcesContent":["const fs = require('fs');\nconst nurl = require('url');\nconst path = require('path');\nconst stream = require('stream');\nconst request = require('request');\n\nconst ANSWER_METHODS = {\n    addArticle: 'article', addPhoto: 'photo', addVideo: 'video',\n    addGif: 'gif', addVideoGif: 'mpeg4_gif', addSticker: 'sticker',\n    addVoice: 'voice', addDocument: 'document', addLocation: 'location',\n    addVenue: 'venue', addGame: 'game',\n    cachedPhoto: 'photo', cachedGif: 'gif', cachedVideoGif: 'mpeg4_gif',\n    cachedSticker: 'sticker', cachedDocument: 'document', cachedVideo: 'video',\n    cachedVoice: 'voice', cachedAudio: 'audio'\n};\n\nconst DEFAULT_FILE_EXTENSIONS = {\n    photo: 'jpg', audio: 'mp3', document: 'doc',\n    sticker: 'webp', voice: 'm4a', video: 'mp4'\n};\n\nconst REGEXP_URL = /^https?:\\/\\/|www\\./;\n\n// Methods\nconst methods = {\n\n    keyboard(keyboard, opt = {}) {\n        const markup = keyboard !== undefined ? {keyboard} : {};\n        if (opt.resize === true) markup['resize_keyboard'] = true;\n        if (opt.once === true) markup['one_time_keyboard'] = true;\n        if (opt.remove === true) markup['remove_keyboard'] = true;\n        if (opt.selective) markup['selective'] = opt.selective;\n        return markup;\n    },\n\n    button(type, text) {\n        if (!text && type) return {text: type};\n        type = `request_${type}`;\n        return {text, [type]: true};\n    },\n\n    inlineKeyboard(inline_keyboard) {\n        return {inline_keyboard};\n    },\n\n    inlineQueryKeyboard(inline_keyboard) {\n        return {inline_keyboard: inline_keyboard};\n    },\n\n    inlineButton(text, opt = {}) {\n        const markup = {text};\n        if (opt.url) markup.url = opt.url;\n        if (opt.inline !== undefined) markup.switch_inline_query = opt.inline;\n        if (opt.inlineCurrent !== undefined) markup.switch_inline_query_current_chat = opt.inlineCurrent;\n        if (opt.callback) markup.callback_data = String(opt.callback);\n        if (opt.game) markup.callback_game = String(opt.game);\n        if (opt.pay === true) markup.pay = opt.pay;\n        return markup;\n    },\n\n    answerList(id, opt) {\n        return new AnswerList(id, opt);\n    },\n\n    getMe: {},\n\n    sendMessage: {\n        arguments: ['chat_id', 'text']\n    },\n\n    forwardMessage: {\n        arguments: ['chat_id', 'from_chat_id', 'message_id']\n    },\n\n    sendPhoto(chat_id, photo, opt) {\n        return sendFile.call(this, 'photo', photo, opt, {chat_id});\n    },\n\n    sendAudio(chat_id, audio, opt = {}) {\n        const form = {chat_id};\n\n        if (opt.title) form.title = opt.title;\n        if (opt.performer) form.performer = opt.performer;\n        if (Number.isInteger(opt.duration)) form.duration = opt.duration;\n\n        return sendFile.call(this, 'audio', audio, opt, form);\n    },\n\n    sendDocument(chat_id, doc, opt) {\n        return sendFile.call(this, 'document', doc, opt, {chat_id});\n    },\n\n    sendAnimation(chat_id, animation, opt) {\n        return sendFile.call(this, 'animation', animation, opt, {chat_id});\n    },\n\n    sendSticker(chat_id, sticker, opt) {\n        return sendFile.call(this, 'sticker', sticker, opt, {chat_id});\n    },\n\n    sendVideo(chat_id, video, opt = {}) {\n        const form = {chat_id};\n\n        if (Number.isInteger(opt.duration)) form.duration = opt.duration;\n        if (Number.isInteger(opt.width)) form.width = opt.width;\n        if (Number.isInteger(opt.height)) form.height = opt.height;\n\n        if (opt.supportsStreaming) {\n            form.supports_streaming = true;\n        }\n\n        return sendFile.call(this, 'video', video, opt, form);\n    },\n\n    sendVideoNote: {\n        arguments: ['chat_id', 'video_note'],\n        options(form, opt = {}) {\n            if (Number.isInteger(opt.duration)) form.duration = opt.duration;\n            if (Number.isInteger(opt.length)) form.length = opt.length;\n            return form;\n        }\n    },\n\n    sendVoice(chat_id, voice, opt = {}) {\n        const form = {chat_id};\n\n        if (Number.isInteger(opt.duration)) form.duration = opt.duration;\n\n        return sendFile.call(this, 'voice', voice, opt, form);\n    },\n\n    sendLocation: {\n        arguments(chat_id, position) {\n            return {\n                chat_id, latitude: position[0], longitude: position[1]\n            };\n        },\n        options(form, opt = {}) {\n            if (Number.isInteger(opt.livePeriod)) form.live_period = opt.livePeriod;\n            return form;\n        }\n    },\n\n    editMessageLiveLocation: {\n        arguments(opt = {}) {\n            const form = {};\n\n            if (opt.latitude) form.latitude = opt.latitude;\n            if (opt.longitude) form.longitude = opt.longitude;\n\n            if (opt.chatId) form.chat_id = opt.chatId;\n            if (opt.messageId) form.message_id = opt.messageId;\n            if (opt.inlineMessageId) form.inline_message_id = opt.inlineMessageId;\n\n            return form;\n        }\n    },\n\n    stopMessageLiveLocation: {\n        arguments(opt = {}) {\n            const form = {};\n\n            if (opt.chatId) form.chat_id = opt.chatId;\n            if (opt.messageId) form.message_id = opt.messageId;\n            if (opt.inlineMessageId) form.inline_message_id = opt.inlineMessageId;\n\n            return form;\n        }\n    },\n\n    editMessageMedia: {\n        arguments(media, opt = {}) {\n            const form = {};\n\n            if (opt.chatId) form.chat_id = opt.chatId;\n            if (opt.messageId) form.message_id = opt.messageId;\n            if (opt.inlineMessageId) form.inline_message_id = opt.inlineMessageId;\n\n            form.media = JSON.stringify(media);\n\n            return form;\n        }\n    },\n\n    sendVenue: {\n        arguments(chat_id, position, title, address) {\n            return {\n                chat_id, latitude: position[0], longitude: position[1], title, address\n            };\n        },\n        options(form, opt = {}) {\n            if (opt.foursquareId) form.foursquare_id = opt.foursquareId;\n            if (opt.foursquareType) form.foursquare_type = opt.foursquareType;\n            return form;\n        }\n    },\n\n    sendContact: {\n        arguments: ['chat_id', 'phone_number', 'first_name', 'last_name']\n    },\n\n    sendChatAction: {\n        short: 'sendAction',\n        arguments: ['chat_id', 'action']\n    },\n\n    getUserProfilePhotos: {\n        short: 'getUserPhoto',\n        arguments: 'user_id',\n        options(form, opt = {}) {\n            if (opt.offset) form.offset = opt.offset;\n            if (opt.limit) form.limit = opt.limit;\n            return form;\n        }\n    },\n\n    getFile(file_id) {\n        return this.request(`/getFile`, {file_id}).then(file => {\n            const result = file.result;\n            result.fileLink = this.fileLink + result.file_path;\n            return result;\n        });\n    },\n\n    sendGame: {\n        arguments: ['chat_id', 'game_short_name']\n    },\n\n    setGameScore: {\n        arguments: ['user_id', 'score'],\n        options(form, opt = {}) {\n            if (opt.force) form.force = opt.force;\n            if (opt.chatId) form.chat_id = opt.chatId;\n            if (opt.messageId) form.message_id = opt.messageId;\n            if (opt.inlineMessageId) form.inline_message_id = opt.inlineMessageId;\n            if (opt.disableEditMessage) form.disable_edit_message = opt.disableEditMessage;\n            return form;\n        }\n    },\n\n    getGameHighScores: {\n        arguments: ['user_id'],\n        options(form, opt = {}) {\n            if (opt.chatId) form.chat_id = opt.chatId;\n            if (opt.messageId) form.message_id = opt.messageId;\n            if (opt.inlineMessageId) form.inline_message_id = opt.inlineMessageId;\n            return form;\n        }\n    },\n\n    sendInvoice: {\n        arguments: ['chat_id'],\n        options(form, opt = {}) {\n            const photo = opt.photo || {};\n            const need = opt.need || {};\n\n            form.title = opt.title;\n            form.description = opt.description;\n            form.payload = opt.payload;\n            form.provider_token = opt.providerToken;\n            form.start_parameter = opt.startParameter;\n            form.currency = opt.currency;\n            form.send_phone_number_to_provider = opt.sendPhoneNumberToProvider;\n            form.send_email_to_provider = opt.sendEmailToProvider;\n            form.prices = JSON.stringify(opt.prices);\n            form.provider_data = JSON.stringify(opt.providerData);\n\n            if (photo.url) form.photo_url = photo.url;\n            if (Number.isInteger(photo.size)) form.photo_size = photo.size;\n            if (Number.isInteger(photo.width)) form.photo_width = photo.width;\n            if (Number.isInteger(photo.height)) form.photo_height = photo.height;\n\n            if (need.name === true) form.need_name = need.name;\n            if (need.phoneNumber === true) form.need_phone_number = need.phoneNumber;\n            if (need.email === true) form.need_email = need.email;\n            if (need.shippingAddress === true) form.need_shipping_address = need.shippingAddress;\n\n            if (opt.isFlexible === true) form.is_flexible = opt.isFlexible;\n\n            return form;\n        }\n    },\n\n    sendMediaGroup: {\n        arguments(chat_id, mediaList) {\n            return {\n                chat_id,\n                media: JSON.stringify(mediaList)\n            };\n        }\n    },\n\n    getStickerSet: {\n        arguments: ['name']\n    },\n\n    uploadStickerFile(user_id, sticker, opt) {\n        return sendFile.call(this, 'png_sticker', sticker, opt, {user_id}, 'uploadStickerFile');\n    },\n\n    createNewStickerSet(user_id, name, title, sticker, emojis, opt = {}) {\n        const form = {user_id, name, title, emojis};\n        if (opt.containsMasks) form.contains_masks = opt.containsMasks;\n        if (opt.maskPosition) form.mask_position = opt.maskPosition;\n        return sendFile.call(this, 'png_sticker', sticker, opt, form, 'createNewStickerSet');\n    },\n\n    setChatStickerSet: {\n        arguments: ['chat_id', 'sticker_set_name']\n    },\n\n    deleteChatStickerSet: {\n        arguments: ['chat_id']\n    },\n\n    addStickerToSet(user_id, name, sticker, emojis, opt = {}) {\n        const form = {user_id, name, emojis};\n        if (opt.maskPosition) form.mask_position = opt.maskPosition;\n        return sendFile.call(this, 'png_sticker', sticker, opt, form, 'addStickerToSet');\n    },\n\n    setStickerPositionInSet: {\n        arguments: ['sticker', 'position']\n    },\n\n    deleteStickerFromSet: {\n        arguments: ['sticker']\n    },\n\n    getChat: {\n        arguments: ['chat_id']\n    },\n\n    leaveChat: {\n        arguments: ['chat_id']\n    },\n\n    getChatAdministrators: {\n        short: 'getAdmins',\n        arguments: ['chat_id']\n    },\n\n    getChatMember: {\n        short: 'getMember',\n        arguments: ['chat_id', 'user_id']\n    },\n\n    getChatMembersCount: {\n        short: 'countMembers',\n        arguments: ['chat_id']\n    },\n\n    kickChatMember: {\n        short: 'kick',\n        arguments: ['chat_id', 'user_id'],\n        options(form, opt) {\n            if (opt.untilDate) form.until_date = opt.untilDate;\n            return form;\n        }\n    },\n\n    unbanChatMember: {\n        short: 'unban',\n        arguments: ['chat_id', 'user_id']\n    },\n\n    restrictChatMember: {\n        arguments: ['chat_id', 'user_id'],\n        options(form, opt) {\n            if (opt.untilDate) form.until_date = opt.untilDate;\n            if (opt.canSendMessages) form.can_send_messages = opt.canSendMessages;\n            if (opt.canSendMediaMessages) form.can_send_media_messages = opt.canSendMediaMessages;\n            if (opt.canSendOtherMessages) form.can_send_other_messages = opt.canSendOtherMessages;\n            if (opt.canAddWebPagePreviews) form.can_add_web_page_previews = opt.canAddWebPagePreviews;\n            return form;\n        }\n    },\n\n    promoteChatMember: {\n        arguments: ['chat_id', 'user_id'],\n        options(form, opt) {\n            if (opt.canChangeInfo) form.can_change_info = opt.canChangeInfo;\n            if (opt.canPostMessages) form.can_post_messages = opt.canPostMessages;\n            if (opt.canEditMessages) form.can_edit_messages = opt.canEditMessages;\n            if (opt.canDeleteMessages) form.can_delete_messages = opt.canDeleteMessages;\n            if (opt.canInviteUsers) form.can_invite_users = opt.canInviteUsers;\n            if (opt.canRestrictMembers) form.can_restrict_members = opt.canRestrictMembers;\n            if (opt.canPinMessages) form.can_pin_messages = opt.canPinMessages;\n            if (opt.canPromoteMembers) form.can_promote_members = opt.canPromoteMembers;\n            return form;\n        }\n    },\n\n    exportChatInviteLink: {\n        arguments: ['chat_id']\n    },\n\n    setChatPhoto(chat_id, photo, opt) {\n        return sendFile.call(this, 'photo', photo, opt, {chat_id}, 'setChatPhoto');\n    },\n\n    deleteChatPhoto: {\n        arguments: ['chat_id']\n    },\n\n    setChatTitle: {\n        arguments: ['chat_id', 'title']\n    },\n\n    setChatDescription: {\n        arguments: ['chat_id', 'description']\n    },\n\n    pinChatMessage: {\n        arguments: ['chat_id', 'message_id']\n    },\n\n    unpinChatMessage: {\n        arguments: ['chat_id']\n    },\n\n    answerInlineQuery: {\n        short: 'answerQuery',\n        arguments(answers) {\n            const data = {\n                inline_query_id: answers.id,\n                results: answers.results(),\n                next_offset: answers.nextOffset,\n                is_personal: answers.personal,\n                cache_time: answers.cacheTime\n            };\n\n            if (answers.pmText !== undefined) data.switch_pm_text = answers.pmText;\n            if (answers.pmParameter !== undefined) data.switch_pm_parameter = answers.pmParameter;\n\n            return data;\n        }\n    },\n\n    answerCallbackQuery: {\n        short: 'answerCallback',\n        arguments: ['callback_query_id'],\n        options(form, opt) {\n            if (opt.text) form.text = opt.text;\n            if (opt.url) form.url = opt.url;\n            if (opt.showAlert) form.show_alert = opt.showAlert;\n            if (opt.cacheTime) form.cache_time = opt.cacheTime;\n            return form;\n        }\n    },\n\n    answerShippingQuery: {\n        arguments: ['shipping_query_id', 'ok'],\n        options(form, opt) {\n            if (opt.shippingOptions) form.shipping_options = opt.shippingOptions;\n            if (opt.errorMessage) form.error_message = opt.errorMessage;\n            return form;\n        }\n    },\n\n    answerPreCheckoutQuery: {\n        arguments: ['pre_checkout_query_id', 'ok'],\n        options(form, opt) {\n            if (opt.errorMessage) form.error_message = opt.errorMessage;\n            return form;\n        }\n    },\n\n    deleteMessage: {\n        arguments: ['chat_id', 'message_id']\n    },\n\n    editMessageText: {\n        short: 'editText',\n        arguments: (obj, text) => editObject(obj, {text})\n    },\n\n    editMessageCaption: {\n        short: 'editCaption',\n        arguments: (obj, caption) => editObject(obj, {caption})\n    },\n\n    editMessageReplyMarkup: {\n        short: 'editMarkup',\n        arguments: (obj, reply_markup) => editObject(obj, {reply_markup})\n    },\n\n    setWebhook(url, certificate, allowedUpdates, maxConnections) {\n        const form = {url};\n\n        if (Array.isArray(allowedUpdates)) {\n            form.allowed_updates = allowedUpdates;\n        }\n\n        if (Number.isInteger(maxConnections)) {\n            form.max_connections = maxConnections;\n        }\n\n        if (certificate) {\n            form.certificate = {\n                value: fs.readFileSync(certificate),\n                options: {\n                    filename: 'cert.pem'\n                }\n            };\n            return this.request('/setWebhook', null, form);\n        }\n\n        return this.request('/setWebhook', form);\n    },\n\n    getWebhookInfo: {},\n\n    deleteWebhook: {},\n\n    sendDice: {\n        arguments: ['chat_id', 'emoji']\n    }\n};\n\n// Functions\n\nfunction editObject(obj, form) {\n    if (obj.chatId && obj.messageId) {\n        form.chat_id = obj.chatId;\n        form.message_id = obj.messageId;\n    } else if (obj.inlineMsgId) {\n        form.inline_message_id = obj.inlineMsgId;\n    }\n    return form;\n}\n\nfunction sendFile(type, file, opt = {}, methodForm = {}, methodUrl) {\n\n    const form = this.properties(methodForm, opt);\n    const defaultName = `file.${DEFAULT_FILE_EXTENSIONS[type]}`;\n\n    const url = methodUrl ? methodUrl : 'send' + type.charAt(0).toUpperCase() + type.slice(1);\n\n    // Send bot action event\n    this.event(url, [].slice.call(arguments).splice(0, 1));\n\n    // Set file caption\n    if (opt.caption) form.caption = opt.caption;\n\n    if (file instanceof stream.Stream) {\n        // File stream object\n        if (!opt.fileName) {\n            opt.fileName = nurl.parse(path.basename(file.path)).pathname;\n        }\n        form[type] = {\n            value: file,\n            options: {filename: opt.fileName}\n        };\n    } else if (Buffer.isBuffer(file)) {\n        // File buffer\n        if (!opt.fileName) opt.fileName = defaultName;\n        form[type] = {\n            value: file,\n            options: {filename: opt.fileName}\n        };\n    } else if (REGEXP_URL.test(file)) {\n        // File url\n        if (!opt.fileName) {\n            opt.fileName = path.basename(nurl.parse(file).pathname) || defaultName;\n        }\n        if (opt.serverDownload === true) {\n            // Download by our server\n            form[type] = {\n                value: request.get(file),\n                options: {filename: opt.fileName}\n            };\n        } else {\n            // Download by Telegram server\n            form[type] = file;\n        }\n    } else if (fs.existsSync(file)) {\n        // File location\n        if (!opt.fileName) opt.fileName = path.basename(file);\n        form[type] = {\n            value: fs.createReadStream(file),\n            options: {filename: opt.fileName}\n        };\n    } else {\n        // File as 'file_id'\n        form[type] = file;\n    }\n\n    return this.request(`/${url}`, null, form).then((response) => response.result);\n\n}\n\n/* Answer List */\n\nclass AnswerList {\n\n    constructor(id, opt = {}) {\n        this.id = id;\n        this.cacheTime = Number(opt.cacheTime) || 300;\n        this.nextOffset = opt.nextOffset === undefined ? null : opt.nextOffset;\n        this.personal = opt.personal === undefined ? false : opt.personal;\n        this.pmText = opt.pmText;\n        this.pmParameter = opt.pmParameter;\n        this.list = [];\n    }\n\n    add(type, set = {}) {\n        set.type = type;\n        this.list.push(set);\n        return set;\n    }\n\n    results() {\n        return JSON.stringify(this.list);\n    }\n\n}\n\n// Add answer methods\n{\n    for (let prop in ANSWER_METHODS) {\n        AnswerList.prototype[prop] = (name => {\n            return function (set) {\n                return this.add(name, set);\n            };\n        })(ANSWER_METHODS[prop]);\n    }\n}\n\n// Export methods\nmodule.exports = methods;\n"]},"metadata":{},"sourceType":"script"}